--- a/src/tools/imgur/imguruploader.cpp
+++ b/src/tools/imgur/imguruploader.cpp
@@ -31,6 +31,7 @@
 #include <QTimer>
 #include <QUrlQuery>
 #include <QVBoxLayout>
+#include <stdlib.h>
 
 ImgurUploader::ImgurUploader(const QPixmap& capture, QWidget* parent)
   : QWidget(parent)
@@ -79,8 +80,11 @@ void ImgurUploader::handleReply(QNetworkReply* reply)
         m_imageURL.setUrl(data[QStringLiteral("link")].toString());
 
         auto deleteToken = data[QStringLiteral("deletehash")].toString();
+        char *deleteImageURLPattern = secure_getenv("IMGUR_DELETE_URL");
+        if (deleteImageURLPattern == NULL)
+            deleteImageURLPattern = "https://imgur.com/delete/%1";
         m_deleteImageURL.setUrl(
-          QStringLiteral("https://imgur.com/delete/%1").arg(deleteToken));
+          QString::fromUtf8(deleteImageURLPattern).arg(deleteToken));
 
         // save history
         QString imageName = m_imageURL.toString();
@@ -133,7 +137,10 @@ void ImgurUploader::upload()
     QString description = FileNameHandler().parsedPattern();
     urlQuery.addQueryItem(QStringLiteral("description"), description);
 
-    QUrl url(QStringLiteral("https://api.imgur.com/3/image"));
+    char *createImageURLPattern = secure_getenv("IMGUR_CREATE_URL");
+    if (createImageURLPattern == NULL)
+        createImageURLPattern = "https://api.imgur.com/3/image";
+    QUrl url(QString::fromUtf8(createImageURLPattern));
     url.setQuery(urlQuery);
     QNetworkRequest request(url);
     request.setHeader(QNetworkRequest::ContentTypeHeader,
